<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Start-CPUStressTest</command:name>
      <command:verb>Start</command:verb>
      <command:noun>CPUStressTest</command:noun>
      <maml:description>
        <maml:para>Start a CPU stress test</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Start a CPU stress test. It is possible to choose a specific load percentage and a specific number of CPUs to target.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Start-CPUStressTest</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>loadPct</maml:name>
          <maml:Description>
            <maml:para>The amount of load to put on the CPUs. If set to 50 %, each job will do $i++  ½ second and then sleep for ½ second. If set to 100, the jobs will do $i++ continously</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>CPUs</maml:name>
          <maml:Description>
            <maml:para>Number of CPUs to test. Windows distributes the workload, but usualy each job gets its own CPU assigned. If the CPUs number is higher then the actual amount of CPUs, the number is reduced to the actual number of CPUs</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Priority</maml:name>
          <maml:Description>
            <maml:para>Job priority can be set according to possibilities. Make sure that the scope that starts and stops the test has a higher Priority then the priority on the stress test if both loadPct and CPUs is maxed out. If not, it might be nessesary to close the console running the test or even reboot the machine to stop the test.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
          <dev:type>
            <maml:name>Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>CPUs</maml:name>
        <maml:Description>
          <maml:para>Number of CPUs to test. Windows distributes the workload, but usualy each job gets its own CPU assigned. If the CPUs number is higher then the actual amount of CPUs, the number is reduced to the actual number of CPUs</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>loadPct</maml:name>
        <maml:Description>
          <maml:para>The amount of load to put on the CPUs. If set to 50 %, each job will do $i++  ½ second and then sleep for ½ second. If set to 100, the jobs will do $i++ continously</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Priority</maml:name>
        <maml:Description>
          <maml:para>Job priority can be set according to possibilities. Make sure that the scope that starts and stops the test has a higher Priority then the priority on the stress test if both loadPct and CPUs is maxed out. If not, it might be nessesary to close the console running the test or even reboot the machine to stop the test.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Start-CPUStressTest -loadPct 50 -CPUs 4</dev:code>
        <dev:remarks>
          <maml:para>Starts 4 Jobs that calculates $++ for ½ second and then sleeps for ½ second until the jobs are removed, usualy by Stop-CPUStressTest</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Stop-CPUStressTest</command:name>
      <command:verb>Stop</command:verb>
      <command:noun>CPUStressTest</command:noun>
      <maml:description>
        <maml:para>Stops a CPUStressTest</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Stops a stress test started by Start-CPUStressTest</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Stop-CPUStressTest</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Stop-CPUStressTest</dev:code>
        <dev:remarks>
          <maml:para>Stops a running CPU stress test</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
</helpItems>